import sqlite3
from datetime import datetime
import sys
import csv
import timeit

def format_unix_timestamp(timestamp):
    if timestamp is not None:
        return datetime.utcfromtimestamp(timestamp).strftime('%Y-%m-%d')
    else:
        return None

def search_ip_in_database(conn, ip):
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM threat_table_by_ip WHERE ip = ?", (ip,))
    result = cursor.fetchone()
    return result

def main(inputFilename, csvFilename):

    notFound = 0
    attack = 0
    botnet = 0
    c2 = 0
    spam = 0
    phishing = 0
    malware = 0
    suspicious = 0
    generic = 0 
    totalIPs = 0

    conn = sqlite3.connect(inputFilename)

    startwatch = timeit.default_timer()

    with open(csvFilename, "r") as csvfile:

        reader = csv.reader(csvfile)

        # skip header row
        next(reader, None)

        for row in reader:

            ipAddresses = row[2]

            ipAddressList = ipAddresses.split()

            for ipAddress in ipAddressList:

                result = search_ip_in_database(conn, ipAddress)

                totalIPs += 1

                if result:
                    threatType = result[1]

                    #print(f"\tIP: {result[0]} Threat Type: {result[1]} Last Seen: {format_unix_timestamp(result[3])}")

                    match threatType:
                        case "attack":
                            attack += 1
                        case "botnet":
                            botnet += 1
                        case "c2":
                            c2 += 1
                        case "spam":
                            spam += 1
                        case "phishing":
                            phishing += 1
                        case "malware":
                            malware += 1
                        case "suspicious":
                            suspicious += 1
                        case "generic":
                            generic += 1
                        case _:
                            #print("\t\tUNKNOWN", result[1])
                else:
                    #print(f"\tIP: {ipAddress} not found in the database.")
                    notFound += 1

    conn.close()

    print(f"\nDone, Elapsed time: {timeit.default_timer()-startwatch:0.5f} seconds\n")

    print("Summary:")
    print(f"Not Found... {notFound}")
    print(f"Attack...... {attack}")
    print(f"Botnet...... {botnet}")
    print(f"c2.......... {c2}")
    print(f"Spam........ {spam}")
    print(f"Phishing.... {phishing}")
    print(f"Malware..... {malware}")
    print(f"Suspicious.. {suspicious}")
    print(f"Generic..... {generic}")
    print("-" * 20)
    totalProcessed = notFound + attack + botnet + c2 + spam + phishing + malware + suspicious + generic
    print(f"Total....... Processed {totalProcessed}, Lines {totalIPs}")

if __name__ == "__main__":

    print("\nFind IP by WHOIS.  input arguments: <database_file.db> <csv_file_to_read_ip_list_from> <ip_address>")

    inputFilename = sys.argv[1]
    csvFilename = sys.argv[2]

    main(inputFilename, csvFilename)
